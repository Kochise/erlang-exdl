int SDL_VideoInit(const char* driver_name, Uint32 flags);
void SDL_VideoQuit(void);
char* SDL_VideoDriverName(char* namebuf, int maxlen);
SDL_Surface* SDL_GetVideoSurface(void);
const SDL_VideoInfo* SDL_GetVideoInfo(void);
int SDL_VideoModeOK(int width, int height, int bpp, Uint32 flags);
SDL_Rect** SDL_ListModes(SDL_PixelFormat* format, Uint32 flags);
SDL_Surface* SDL_SetVideoMode(int width, int height, int bpp, Uint32 flags);
void SDL_UpdateRects(SDL_Surface* screen, int numrects, SDL_Rect* rects);
void SDL_UpdateRect(SDL_Surface* screen, Sint32 x, Sint32 y, Uint32 w, Uint32 h);
int SDL_Flip(SDL_Surface* screen);
int SDL_SetGamma(float red, float green, float blue);
int SDL_SetGammaRamp(const Uint16* red, const Uint16* green, const Uint16* blue);
int SDL_GetGammaRamp(Uint16* red, Uint16* green, Uint16* blue);
int SDL_SetColors(SDL_Surface* surface, SDL_Color* colors, int firstcolor, int ncolors);
int SDL_SetPalette(SDL_Surface* surface, int flags, SDL_Color* colors, int firstcolor, int ncolors);
Uint32 SDL_MapRGB(const SDL_PixelFormat* const format, const Uint8 r, const Uint8 g, const Uint8 b);
Uint32 SDL_MapRGBA(const SDL_PixelFormat* const format, const Uint8 r, const Uint8 g, const Uint8 b, const Uint8 a);
void SDL_GetRGB(Uint32 pixel, SDL_PixelFormat* fmt, Uint8* r, Uint8* g, Uint8* b);
void SDL_GetRGBA(Uint32 pixel, SDL_PixelFormat* fmt, Uint8* r, Uint8* g, Uint8* b, Uint8* a);
SDL_Surface* SDL_CreateRGBSurface(Uint32 flags, int width, int height, int depth, Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask);
SDL_Surface* SDL_CreateRGBSurfaceFrom(void* pixels, int width, int height, int depth, int pitch, Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask);
void SDL_FreeSurface(SDL_Surface* surface);
int SDL_LockSurface(SDL_Surface* surface);
void SDL_UnlockSurface(SDL_Surface* surface);
SDL_Surface* SDL_LoadBMP_RW(SDL_RWops* src, int freesrc);
int SDL_SaveBMP_RW(SDL_Surface* surface, SDL_RWops* dst, int freedst);
int SDL_SetColorKey(SDL_Surface* surface, Uint32 flag, Uint32 key);
int SDL_SetAlpha(SDL_Surface* surface, Uint32 flag, Uint8 alpha);
SDL_bool SDL_SetClipRect(SDL_Surface* surface, const SDL_Rect* rect);
void SDL_GetClipRect(SDL_Surface* surface, SDL_Rect* rect);
SDL_Surface* SDL_ConvertSurface(SDL_Surface* src, SDL_PixelFormat* fmt, Uint32 flags);
int SDL_UpperBlit(SDL_Surface* src, SDL_Rect* srcrect, SDL_Surface* dst, SDL_Rect* dstrect);
int SDL_LowerBlit(SDL_Surface* src, SDL_Rect* srcrect, SDL_Surface* dst, SDL_Rect* dstrect);
int SDL_FillRect(SDL_Surface* dst, SDL_Rect* dstrect, Uint32 color);
SDL_Surface* SDL_DisplayFormat(SDL_Surface* surface);
SDL_Surface* SDL_DisplayFormatAlpha(SDL_Surface* surface);
SDL_Overlay* SDL_CreateYUVOverlay(int width, int height, Uint32 format, SDL_Surface* display);
int SDL_LockYUVOverlay(SDL_Overlay* overlay);
void SDL_UnlockYUVOverlay(SDL_Overlay* overlay);
int SDL_DisplayYUVOverlay(SDL_Overlay* overlay, SDL_Rect* dstrect);
void SDL_FreeYUVOverlay(SDL_Overlay* overlay);
int SDL_GL_LoadLibrary(const char* path);
void* SDL_GL_GetProcAddress(const char* proc);
int SDL_GL_SetAttribute(SDL_GLattr attr, int value);
int SDL_GL_GetAttribute(SDL_GLattr attr, int* value);
void SDL_GL_SwapBuffers(void);
void SDL_GL_UpdateRects(int numrects, SDL_Rect* rects);
void SDL_GL_Lock(void);
void SDL_GL_Unlock(void);
void SDL_WM_SetCaption(const char* title, const char* icon);
void SDL_WM_GetCaption(char** title, char** icon);
void SDL_WM_SetIcon(SDL_Surface* icon, Uint8* mask);
int SDL_WM_IconifyWindow(void);
int SDL_WM_ToggleFullScreen(SDL_Surface* surface);
SDL_GrabMode SDL_WM_GrabInput(SDL_GrabMode mode);
int SDL_SoftStretch(SDL_Surface* src, SDL_Rect* srcrect, SDL_Surface* dst, SDL_Rect* dstrect);
int SDL_GetWMInfo(SDL_SysWMinfo* info);
int SDL_WM_IsMaximized(void);